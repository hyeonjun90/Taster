<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'>

<sqlMap>
	
	<select id="memberIdCheck" parameterClass="String" resultClass="Integer">
		select count(*) from Member where member_id=#member_id#
	</select>
	<select id="nicCheck" parameterClass="String" resultClass="Integer">
		select count(*) from Member where member_nicname=#member_nicname#
	</select>
	
	<insert id="insertMember" parameterClass="bean.MemberBean">
		insert into MEMBER(member_id, member_pwd, member_nicname, member_name, member_phone,
				member_addr, member_zipcdoe, member_image, member_joindate, member_level, member_email)
			values(#member_id#, #member_pwd#, #member_nicname#, #member_name#, #member_phone#,
				#member_addr#, #member_zipcode#, #member_image#, #member_joinDate#, default, #member_email#)
	</insert>
	
	<select id="zipcodeSearch" parameterClass="String" resultClass="bean.ZipcodeBean">
		select * from zipcode where dong like #keyword#
	</select>
	
	<select id="pwdCheck" parameterClass="String" resultClass="String">
		select member_pwd from member where member_id=#member_id#
	</select>
	
	<select id="getMemberInfo" parameterClass="String" resultClass="bean.MemberBean">
		select member_id, member_nicname, member_level from member where member_id=#member_id#
	</select>
	<!-- 아이디/비번 찾기 -->
	<select id="findMemberId" parameterClass="String" resultClass="String">
		select member_id from member where member_email=#member_email#
	</select>
	<select id="findMemberPwd" parameterClass="String" resultClass="String">
		select member_pwd from member where member_email=#member_email#
	</select>

   <!-- 테스트 코드 -->
   <select id="test" resultClass="bean.PositionBean">
      select * from Member_Position where p_idx=1
   </select>
   
   <!-- bookmarkList select문 선언 -->
   <select id="bookmarkList-selecAll" resultClass="bean.BookmarkListBean" parameterClass="HashMap">
   		select * from (select * from (select shop_name, file_savname, rownum rnum from shop 
			where shop_idx in (select shop_idx from bookmark where member_id=#member_id# )
   			order by shop_idx DESC) where <![CDATA[rownum<10]]>) where <![CDATA[rnum>0]]>
   </select>
   
   <!--reviewList select문 선언 -->
   <select id="reviewList-selectAll" resultClass="bean.ReviewListBean" parameterClass="HashMap">
		select s.shop_idx,shop_name, shop_addr1, shop_addr2, shop_addr3, shop_addr4, file_savname, (select r_content  from (select * from (select r_content,rownum rnum from review r 
						where r.shop_idx=s.shop_idx and member_id=#member_id# 
						order by review_idx desc) where rnum=1)) r_content,
		(select member_nicname from 
							  (select  member_nicname from member m1 inner join review r1 on r1.member_id=m1.member_id
							    where m1.member_id=r1.member_id and r1.shop_idx=s.shop_idx)
						   where <![CDATA[rownum<2]]>) as member_nicname,
		(select ROUND(AVG(r1.r_score),1) from shop s1 
						  				inner join review r1 on r1.shop_idx = s1.shop_idx 
						  				where r1.SHOP_IDX=s.SHOP_IDX) as avg_r_score,
		(select member_image from 
							  (select  member_image from member m1 inner join review r1 on r1.member_id=m1.member_id
							    where m1.member_id=r1.member_id and r1.shop_idx=s.shop_idx)
						   where <![CDATA[rownum<2]]>) as member_image
from shop s 
	 where s.shop_idx in (select distinct(shop_idx) from review where member_id=#member_id#)
   </select>
   
   <!-- 마이펭지 페이징에 사용될 리스트 카운터 -->
   	<select id="reviewListCount" resultClass="Integer" parameterClass ="String">
		select count(*) from review where member_id = #member_id#
	</select>
	
		<select id="bookmarkListCount" resultClass="Integer" parameterClass ="String">
		select count(*) from bookmark where member_id = #member_id#
	</select>
	
</sqlMap>
